var params = {
    alpha: 4,
    costWeight: 0,
    trueTheta: .7, // true coin flip weight
    nExamples: 20,
    classes: [0, 1],
    trueLearnerClass: 0,
    classHypers: {
        0: {a: 30, b: 30},
        1: {a: 1, b: 1}
    }
};

// literal learner
var L0 = function (examples, learnerHypers) {
    return Beta({ a: _.toNumber(learnerHypers.a + examples.heads), b: _.toNumber(learnerHypers.b + examples.n - examples.heads) });
};

// pragmatic speaker
var S1 = function (theta, learnerHypers) {
    return Infer({ method: 'enumerate' }, function () {
        var nExamples = params.nExamples;
        var nHeads = uniformDraw(_.range(0, nExamples + 1));
        var examples = { n: nExamples, heads: nHeads };
        factor(params.alpha * (L0(examples, learnerHypers).score(theta) - params.costWeight * examples.n));
        return examples;
    });
};

S1(params.trueTheta, params.classHypers[params.trueLearnerClass])